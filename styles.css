/*------------------------------- CSS definitions -------------------------------*/
:root {
  /* Colors */
  --primary-color-1: hsl(47, 88%, 63%);
  --neutral-color-1: hsl(0, 0%, 7%);
  --neutral-color-2: hsl(0, 0%, 42%);
  --neutral-color-3: hsl(0, 0%, 100%);
  --neutral-color-4: hsl(0, 0%, 0%);

  /* Typography */
  --font-size-1: 0.75rem; /* 12px */
  --font-size-2: 0.875rem; /* 14px */
  --font-size-3: 1rem; /* 16px */
  --font-size-4: 1.25rem; /* 20px */
  --font-size-5: 1.5rem; /* 24px */

  --line-height-1: 150%;

  --font-weight-medium: 500;
  --font-weight-bold: 700;
  --font-weight-extra-bold: 800;

  /* Spacing */
  --spacing-1: 0.25rem; /* 4px */
  --spacing-2: 0.75rem; /* 12px */
  --spacing-3: 1.5rem; /* 24px */

  /* Border-width */
  --border-width-1: 0.0625rem; /* 1px */

  /* Border radius */
  --border-radius-1: 0.25rem; /* 4px */
  --border-radius-2: 0.625rem; /* 10px */
  --border-radius-3: 1.25rem; /* 20px */

  /* Shadows */
  --shadow-1: 0.5rem 0.5rem 0rem 0rem var(--neutral-color-4);
}

@font-face {
  font-family: "Figtree";
  src: url("./assets/fonts/static/Figtree-Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Figtree";
  src: url("./assets/fonts/static/Figtree-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Figtree";
  src: url("./assets/fonts/static/Figtree-ExtraBold.ttf") format("truetype");
  font-weight: 800;
  font-style: normal;
  font-display: swap;
}

/*--------------------------------- CSS reset ---------------------------------*/
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2 {
  line-height: 1.1;
  text-wrap: balance;
}

/* Avoid text overflows */
h1,
h2,
p {
  overflow-wrap: break-word;
}

/* Make images easier to work with */
img {
  max-width: 100%;
  display: block;
}

/* Improve line wrapping */
p {
  text-wrap: pretty;
}

/*------------------------------- Main stylings -------------------------------*/

body {
  background-color: var(--primary-color-1);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-family: "Figtree";
  color: var(--neutral-color-1);
  padding: var(--spacing-3);
}

.card {
  background-color: var(--neutral-color-3);
  padding: var(--spacing-3);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-3);
  box-shadow: var(--shadow-1);
  border-radius: var(--border-radius-3);
  border: var(--border-width-1) solid var(--neutral-color-1);
  max-width: 20rem; /* 327px */ /* RRC: Check if max-width or min-width? */
}

.visually-hidden:not(:focus):not(:active) {
  clip: rect(0px, 0px, 0px, 0px);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* RRC: Understand visually-hidden */
}

.card-content {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-2);
}

.blog-illustration {
  border-radius: var(--border-radius-2);
  object-fit: cover; /* RRC: Understand this and understand the effects without it*/
  width: fit-content;
}

.tag {
  padding: var(--spacing-1) var(--spacing-2);
  border-radius: var(--border-radius-1);
  font-weight: var(--font-weight-extra-bold);
  font-size: clamp(var(--font-size-1), 1vw, var(--font-size-2));
  background-color: var(--primary-color-1);
  width: fit-content; /*RRC: Control the width*/
}

.card time {
  font-weight: var(--font-weight-medium);
  font-size: clamp(var(--font-size-1), 1vw, var(--font-size-2));
}

/* h2, */
a {
  font-weight: var(--font-weight-extra-bold);
  font-size: clamp(var(--font-size-4), 2vw, var(--font-size-5));
  text-decoration: none;
  color: inherit; /* RRC: Why do i need to define the color separately why not automatocally use from the body? */
}

/* h2:hover, */
a:hover {
  color: var(--primary-color-1);
  cursor: pointer;
}

.card p {
  font-weight: var(--font-weight-medium);
  font-size: clamp(var(--font-size-2), 2vw, var(--font-size-3));
  color: var(--neutral-color-2);
}

.card-footer {
  display: flex;
  gap: var(--spacing-2);
  align-items: center;
}

.author-name {
  font-weight: var(--font-weight-extra-bold);
  font-size: var(--font-size-2);
}

@media (min-width: 80rem) {
  .card {
    max-width: 24rem; /* 384px */
  }
}
